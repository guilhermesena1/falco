#!/bin/sh
#
# Run 'autoreconf -i' to generate 'configure', 'Makefile.in', etc.,
# including in the subdirectories of falco src (for the git
# submodules).
#
# The first time this is run on a new cloned git repo the configure
# script will not be present, only the configure.ac and
# Makefile.am. The rest must be generated by `autoreconf -i` and this
# must happen in the `src/smithlab_cpp`,
# `src/abismal/src/smithlab_cpp` and `src/abismal` subdirs. Running
# `autoreconf -i` in some of these directories will move recursively
# into others, but this is not guaranteed. This script will do each
# separately.
#
# If you are working with a distribution (file ending with ".tar.gz"
# or similar) then this script should not be needed, and should not be
# present, as all the files should already exist. You should only run
# this script if you know what you are doing with autoreconf.
#
# This script will only work with an argument to confirm the help
# message has been read.

runautoreconf() {
    autoreconf -i src/smithlab_cpp;
    autoreconf -i;
}

if test -d .git && test "$(basename "${PWD}")" = "falco"
then
    runautoreconf
    exit 0
else
    echo "  It seems you are either attempting to run this script       "
    echo "  from the wrong directory, or in a source tree that was      "
    echo "  not obtained by cloning the falco git repo.              "
    echo "                                                              "
    echo "  ./autogen.sh generates the configure script in the          "
    echo "  relevant subdirectories. Only run this if you know          "
    echo "  what you are doing with autoreconf and are simply           "
    echo "  avoiding doing that. If you just want to use the            "
    echo "  software, download a release and this script will           "
    echo "  not be needed.                                              "
    exit 1
fi
